#4.3.2 Fitting a Smooth ROC Curve
#Parametric Method
#' function that uses parametric method to fully analyze continuous data
#' using a Box-Cox transformation to transform data to normal data,and then analyze it
#' @param data0 continuous test results of nondiseased subjects
#' @param data1 continuous test results of diseased subjects
#' @return binormal parameters,estimation of their variances and covariance,and full area under ROC
#' @export
roc.continuous<-function(data0,data1){
  loglikelihood<-function(lambda){
    data0_transformed<-rep(0,length=length(data0))
    for(i in 1:length(data0)){
      if(lambda!=0){
        data0_transformed[i]<-(data0[i]^lambda-1)/lambda
      }
      else{
        data0_transformed[i]<-log(data0[i])
      }
    }
    mean0<-mean(data0_transformed)
    var0<-var(data0_transformed)*(length(data0-1))/length(data0)
    result0<-log(sqrt(var0))*(-length(data0))
    for(i in 1:length(data0)){
      result0<-result0+log(data0[i]^(lambda-1))-(data0_transformed[i]-mean0)^2/(2*var0)
    }

    data1_transformed<-rep(0,length=length(data1))
    for(i in 1:length(data1)){
      if(lambda!=0){
        data1_transformed[i]<-(data1[i]^lambda-1)/lambda
      }
      else{
        data1_transformed[i]<-log(data1[i])
      }
    }
    mean1<-mean(data1_transformed)
    var1<-var(data1_transformed)*(length(data1)-1)/length(data1)
    result1<-log(sqrt(var1))*(-length(data1))
    for(i in 1:length(data1)){
      result1<-result1+log(data1[i]^(lambda-1))-(data1_transformed[i]-mean1)^2/(2*var1)
    }
    return(-result0-result1)
  }
  start_param<-1
  result<-nlminb(start_param,loglikelihood)
  lambda<-result$par
  data0_transformed<-rep(0,length=length(data0))
  for(i in 1:length(data0)){
    if(lambda!=0){
      data0_transformed[i]<-(data0[i]^lambda-1)/lambda
    }
    else{
      data0_transformed[i]<-log(data0[i])
    }
  }
  data1_transformed<-rep(0,length=length(data1))
  for(i in 1:length(data1)){
    if(lambda!=0){
      data1_transformed[i]<-(data1[i]^lambda-1)/lambda
    }
    else{
      data1_transformed[i]<-log(data1[i])
    }
  }
  n0<-length(data0)
  n1<-length(data1)
  a<-(mean(data1_transformed)-mean(data0_transformed))/sqrt(var(data1_transformed)*(length(data1)-1)/length(data1))
  b<-sqrt(var(data0_transformed)*(length(data0)-1)/length(data0))/sqrt(var(data1_transformed)*(length(data1)-1)/length(data1))
  var_a<-(n0*(a^2+2)+2*n1*b^2)/(2*n0*n1)
  var_b<-(n1+n0)*b^2/(2*n0*n1)
  covar_ab<-a*b/(2*length(data1))
  area.full<-pnorm(a/sqrt(1+b^2))
  #绘制曲线
  x<-seq(0,1,length=10000)
  y<-rep(0,length=10000)
  for(i in 1:10000){
    y[i]<-pnorm(a+b*qnorm(x[i]))
  }
  plot(x,y,type="l",main="Estimation of Smooth ROC Curve",xlab="FPR",ylab="Se",col="purple")

  #输出结果
  output<-list(lambda=NULL,a=NULL,b=NULL,var_a=NULL,var_b=NULL,covar_ab=NULL,area.full=NULL)
  output$lambda<-lambda
  output$a<-a
  output$b<-b
  output$var_a<-var_a
  output$var_b<-var_b
  output$covar_ab<-covar_ab
  output$area.full<-area.full
  return(output)
}
